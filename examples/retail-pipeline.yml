name: "retail-data-pipeline"
sources:
  - type: kafka
    id: "retail-source"
    brokers: "localhost:9092"
    group_id: "rde-retail-group"
    topic: "retail"
    topic_mapping:
      iceberg_table: "retail_products"
      bucket: "iceberg-data"
      endpoint: "http://localhost:9000"
      access_key: "minioadmin"
      secret_key: "minioadmin"
      region: "us-east-1"
      auto_schema_evolution: true
      sql_transform: |
        SELECT 
          _id as product_id,
          CAST(REPLACE(actual_price, ',', '') AS DOUBLE) as price_inr,
          CAST(average_rating AS DOUBLE) as rating,
          brand,
          category,
          SUBSTR(crawled_at, 1, 10) as crawled_date,
          CASE 
            WHEN out_of_stock = true THEN 'out_of_stock'
            ELSE 'in_stock'
          END as stock_status,
          pid as product_code,
          CASE 
            WHEN CAST(REPLACE(actual_price, ',', '') AS DOUBLE) < 1000 THEN 'low'
            WHEN CAST(REPLACE(actual_price, ',', '') AS DOUBLE) < 5000 THEN 'medium'
            ELSE 'high'
          END as price_category,
          CASE 
            WHEN CAST(average_rating AS DOUBLE) >= 4.0 THEN 'excellent'
            WHEN CAST(average_rating AS DOUBLE) >= 3.0 THEN 'good'
            ELSE 'poor'
          END as rating_category,
          DATE(SUBSTR(crawled_at, 7, 4) || '-' || SUBSTR(crawled_at, 4, 2) || '-' || SUBSTR(crawled_at, 1, 2)) as partition_date
        FROM input_data
        WHERE _id IS NOT NULL AND actual_price IS NOT NULL
      partition_by: ["category", "partition_date"]

transforms:
  - type: clean_data
    id: "clean-retail"
    remove_nulls: true
    trim_strings: true
    normalize_case: "lower"

sinks:
  - type: iceberg
    id: "retail-sink"
    table_name: "retail_products"
    bucket: "iceberg-data"
    endpoint: "http://localhost:9000"
    access_key: "minioadmin"
    secret_key: "minioadmin"
    region: "us-east-1"

edges:
  - ["retail-source", "clean-retail"]
  - ["clean-retail", "retail-sink"]
